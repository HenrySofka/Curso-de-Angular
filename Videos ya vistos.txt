Sección 1: Introducción al curso
    1 - Introducción
    2 - ¿Cómo funciona el curso?
    3 - ¿Cómo hacer preguntas?
    4 - Instalaciones necesarias y recomendaciones
    5 - Instalar Angular

Sección 2: Conceptos generales para empezar con Angular y TypeScript
    6 - Introducción a la sección
    7 - Temas puntuales de la sección
    8 - ¿Qué es TypeScript? Y ¿Por qué Angular usa TypeScript?
    9 - Mitos y realidades de Angular

Sección 3: Base de TypeScript - Sección recomendada
    10 - Introducción a la sección
    11 - Temas puntuales de la sección
    12 - Nota antes de empezar
    13 - Inicio de proyecto - Introducción a TypeScript
    14 - Tipos básicos y conceptos generales
    15 - Objetos, arreglos e interfaces
    16 - Funciones básicas
    17 - Funciones con objetos como argumentos
    18 - Tarea sobre objetos e interfaces
    19 - Desestructuración de Objetos
    20 - Desestructuración de Arreglos
    21 - Desestructuración de argumentos
    22 - Importaciones y expreciones
    23 - Clases básicas
    24 - Constructor de una clase
    25 - Extender de una clase
    26 - Genéricos
    27 - Decoradores de clases
    28 - Encadenamiento opcional
    29 - Código fuente de la sección

Sección 4: Introducción a Angular
    30 - Introducción a la sección
    31 - Temas puntuales de la sección
    32 - Introducción a Angular
    33 - Crear un proyecto de Angular
    34 - Nota de actualización
    35 - Explicación de cada archivo del proyecto
    36 - Explicación de los archivos dentro del SRC
    37 - App Component
    38 - Contador App
    39 - Métodos en el componente
    40 - Tarea con el contador
    41 - Crear un componente manualmente
    42 - Componente de Heroe y separación de directorios
    43 - Cambios en el template del componente
    44 - Concepto de "one way data binding" enlazado en una sola vía
    45 - Crear componente de forma automática: Comando utilizado: ng g c nombre_carpeta
    46 - Directiva *ngFor
    47 - Directiva *ngIf
    48 - Ng-Template y el ngIf-else
    49 - Módulos
    50 - Módulos - segunda parte
    51 - Bonus: Hacer respaldo de nuestro proyecto
    52 - Código fuente de la sección

Sección 5: Expandiendo nuestras bases
    53 - Introducción a la sección
    54 - Temas puntuales de la sección
    55 - Continuación del proyecto
    56 - Módulo DBZ (Dragon Ball Z)
    57 - Diseño de la pantalla a trabajar
    58 - FormsModule
    59 - ngModel
    60 - Mostrar listado de personajes
    61 - Crear componentes hijos
    62 - @Input
    63 - Tarea con input y módulos
    64 - @Outputs y EventEmitter
    65 - Bonus: Depuración de la aplicación
    66 - Servicios
    67 - Centralizar el acceso de los personajes en el servicio
    68 - Métodos en el servicio
    69 - Código fuente de la sección

Sección 6: Despliegues rápidos a producción
    70 - Introducción a la sección
    71 - Temas puntuales de la sección
    72 - Generar build de producción
    73 - Desplegar en Netlify

Sección 7: GifsApp - Aplicación para buscar imágenes
    74 - Introducción a la sección
    75 - Temas puntuales de la sección
    76 - Demostración del objetivo final de la sección
    77 - Inicio del proyecto - GifsApp
    78 - Diseño inicial de nuestra aplicación de Gifs
    79 - Módulo Shared
    80 - GifsModule y sus componentes
    81 - @ViewChild Obtener referencias a objetos del HTML
    82 - GifService
    83 - Controlar el historial de busqueda
    84 - Giphy Api Key - Giphy Developers: Key: MiTAcCh2dCyGV5m54jv1tt6MVC7T82rA
    85 - Realizar una petición HTTP
    86 - Mostrar los resultados en pantalla
    87 - Colocando un tipado a las peticiones HTTP
    88 - LocalStorage
    89 - Cargar imágenes automáticamente
    90 - Obtener imágenes desde el siedbar
    91 - HttpParams
    92 - Animate.style CSS
    93 - Código fuente de la sección

Sección 8: SPA - PaisesApp
    94 - Introducción a la sección
    95 - Temas puntuales de la sección
    96 - Demostración de la sección
    97 - Inicio de proyecto - PaisesApp
    98 - Estructura y explicación de la aplicación de países
    99 - Creando los módulos y los componentes básicos
    100 - Estructura HTML de nuestra aplicación
    101 - RouterModule Rutas en nuestra aplicación
    102 - RouterLink
    103 - Componente Siedbar
    104 - Componente para buscar por país
    105 - Nota de actualización
    106 - Servicio para buscar países
    107 - Manejo de errores
    108 - Tipado de la petición de RestCountries
    109 - Llenar la tabla de países
    110 - Componente Input y Tabla
    111 - Funcionalidades del componente PaisInputComponent
    112 - DebounceTime - en el input: Caja de sugerencias
    113 - Por Capital
    114 - Ver país de forma independiente
    115 - RxJs - SwitchMap
    116 - Terminar la pantalla de ver país
    117 - Fin de la pantalla de ver país
    118 - Código fuente de la sección

Sección 9: Continuación aplicación de Países - Segerencias, debounce y más
    119 - Introducción a la sección
    120 - Temas puntuales de la sección
    121 - Continuación del proyecto - PaisesApp
    122 - ngClass, class y [class.]
    123 - Clases de CSS condicionales
    124 - Mostrar países por región
    125 - Nota de actualización
    126 - Optimizar las peticiones HTTP
    127 - Animaciones de CSS
    128 - Mostrar sugerencias al escribir autocomplete
    129 - Código fuente de la sección

Sección 10 - Pipes de Angular
    130 - Introducción a la sección
    131 - Temas puntuales de la sección
    132 - Demostración del objetivo de la sección
    133 - Inicio del proyecto - PipesApp
    134 - Introducción a los Pipes de Angular
    135 - Instalar PrimeNg
    136 - Prime Button y estilo global
    137 - Cards y botones con íconos
    138 - PrimeNg module
    139 - PrimeNg - Menubar
    140 - Rutas de nuestra aplicación
    141 - Cambiar las rutad utilizando el MenuBar
    142 - PrimeFlex
    143 - UpperCase, LowerCase y TitleCase Pipes
    144 - Date Pipe
    145 - Cambiar el idioma por defecto
    146 - Timezone y otros idiomas
    147 - DecimalPipe
    148 - CurrencyPipe y PercentPipe
    149 - PrimeNg - Fieldset
    150 - i18nSelectPipe
    151 - i18nPluralPipe
    152 - Tarea sobre i18nPipes y PrimeNg
    153 - SlicePipe
    154 - KeyValuePipe
    155 - JsonPipe
    156 - AsyncPipe
    157 - Código fuente de la sección

Sección 11: Pipes personalizados
    158 - Introducción a la sección
    159 - Temas puntuales de la sección
    160 - Continuación del proyecto - PipesApp
    161 - Pipe personalizado - mayusculaPipe
    162 - Valor y argumentos a los pipes personalizados
    163 - PrimeTable y PrimeToolbar
    164 - Llenar una PrimeTable con data
    165 - Tarea pipe personalizado VuelaPipe
    166 - Ordenar héroes por nombre OrdenarPipe
    167 - Parametrizar nuestros pipe personalizado
    168 - PrimeNg - Sortable Table
    169 - Código fuente de la sección

Sección 12: HeroesApp - Rutas hijas y Lazyload
    170 - Introducción a la sección
    171 - Temas puntuales de la sección
    172 - Demostración del objetivo final de la sección
    173 - Inicio de proyecto - HeroesApp
    174 - Módulos y componentes iniciales
    175 - Tutas principales - Root
    176 - Rutas hijas y LazyLoad AuthRoutes
    177 - Tarea - Rutas Hijas de Héroes
    178 - Comunicación entre Resolución de la tarea Rujas Hijas de Héroes
    179 - Mostrar Rutas Hijas Segundo RouterOutlet
    180 - Código fuente de la sección

Sección 13: HeroesApp - Angular Material & Angular Flex-Layout
    181 - Introducción a la sección
    182 - Temas puntuales de la sección
    183 - Demostración del objetivo final de la sección
    184 - Continuación del proyecto - HeroesApp
    185 - Material Sidenav, Toolbar e iconos
    186 - Material Navlist
    187 - Heroes Backend - json-server: json-server --watch db.json
    188 - Heroes Service Traer información de los héroes
    189 - Interfaz Héroe
    190 - Material Card - Flex Layout
    191 - Flex Layout - Diferentes resoluciones
    192 - Tarea - HeroeTarjetaComponent
    193 - Tarea - PipeImagen
    194 - Tarea - Ruta Héroe y Editar Héroe
    195 - Pantalla de Héroe
    196 - Diseño de la pantalla de Héroe
    197 - Variables de entorno
    198 - Material Autocomplete
    199 - Autocomplete - Segunda Parte
    200 - Tarea Autocomplete cuando no encontró nada
    201 - Resumen de la sección
    202 - Código fuente de la sección

Sección 14: HeroesApp - CRUD (Continuación con Angular Material)
    203 - Introducción a la sección
    204 - Temas puntuales de la sección
    205 - Demostración del objetivo final de la sección
    206 - Continuación del proyecto - HeroesApp
    207 - Diseño de la pantalla para agregar héroes
    208 - Insertar en base de datos
    209 - Editar héroes
    210 - Excepciones en nuestro ImagenPipe
    211 - Eliminar registro
    212 - Pipes Puros e Impuros
    213 - Material Snackbar
    214 - Material Dialog
    215 - Información desde y hacia el dialog
    216 - Adecuar los textos de la pantalla de agregar
    217 - Código fuente de la sección

Sección 15: Protección de Rutas
    218 - Introducción a la sección
    219 - Temas puntuales de la sección
    220 - Continuación del proyecto - HeroesApp
    221 - Pantalla de Login Básico
    222 - AuthService - Servicio para mantener el estado de la autenticación
    223 - Mostrar la información del usuairo activo
    224 - Angular Guards - CanLoad
    225 - CanActivated
    226 - Mantener la sesión del usuario
    227 - Código fuente de la sección

Sección 16: Formularios - Template y Lazyload
    228 - Introducción a la sección
    229 - Temas puntuales de la sección
    230 - Inicio de la sección - Formularios
    231 - Creación de módulos necesarias
    232 - Componentes y LazyLoad de formularios
    233 - SideMenu
    234 - Template: Diseño del formulario básico
    235 - Template: FormsModule
    236 - Template: Mostrar mensaje de error
    237 - ViewChild
    238 - Template: validar número igual mayor a 0
    239 - Directivas personalizadas CustomMin (Opcional)
    240 - Template: Limpiar el formulario
    241 - Template: Formularios dinámicos y arreglos
    242 - Agregar elementos de forma dinámica
    243 - Eliminar elemento creado de forma dinámica
    244 - Agregar juegos favoritos
    245 - Template: Radio, Check y Switches
    246 - Template: Validanto Radio, Check y Switches
    247 - Código fuente de la sección

Sección 17: Formularios Reactivos
    248 - Introducción a la sección
    249 - Temas puntuales de la sección
    250 - Continuación del proyecto - Formularios
    251 - Primeros pasos en formularios reactivos
    252 - FormBuilder
    253 - Validaciones básicas - Forms Validator
    254 - Mostrar mensaje de error
    255 - Submit del formulario
    256 - Tarea: Validar un nuevo campo
    257 - FormArray
    258 - Agregar controles al FormArray
    259 - Eliminar elementos de un FormArray
    260 - Formularios Reactivos: Switches
    261 - Actualizar el valor de la persona
    262 - Documentación de formularios reactivos Angular.io
    263 - Código fuente de la sección

Sección 18: Formularios: Validaciones manuales y asíncronas
    264 - Inicio de sección
    265 - Temas puntuales de la sección
    266 - Continuación del proyecto
    267 - Resolución de la tarea - Ruta y LazyLoad
    268 - Diseño de la pantalla de registro
    269 - Validar contra una expresión regular
    270 - Evaluar un email
    271 - Validaciones personalizadas
    272 - Separar la lógica de validaciones del componente
    273 - Validar contraseñas iguales
    274 - Preparaciones para Validaciones Asíncronas
    275 - Validaciones Asíncronas
    276 - Estado del formulario
    277 - Errores personalizados
    278 - Mensaje de error personalizado
    279 - Código fuente de la sección

Sección 19: Formularios Reactivos: Multiples selectores anidados
    280 - Inicio de sección
    281 - Temas puntuales de la sección
    282 - Demostración del objetivo de la sección
    283 - Inicio del proyecto - Selectores
    284 - Estructura de directorios para la aplicación
    285 - Formulario reactivo - primer selector
    284 - Selector de regiones
    287 - Segundo selector anidado
    288 - Limpiar país cuando el primer selector cambia
    289 - Tercer selector anidado - Fronteras
    290 - Llenar tercer selector - Fronteras
    291 - Mejorar la experiencia de usuario
    292 - Cambiar código de fronteras por los nombres de los países
    293 - Código fuente de la sección

Sección 20: Formularios Reactivos: Multiples selectores anidados
    294 - Inicio de sección
    295 - Temas de la sección
    296 - Inicio del proyecto - LifeCycle
    297 - Implementar todos los hooks del ciclo de vida
    298 - Explicación sobre los ciclos de vida
    299 - ngOnChanges
    300 - ngOnDestroy
    301 - Más información sobre el ciclo de vida
    302 - Código fuente de la sección

Sección 21: Formularios Reactivos: Multiples selectores anidados
    303 - Inicio de sección
    304 - Temas puntuales de la sección
    305 - Demostración del objetivo de la sección
    306 - Inicio del proyecto - MapasApp
    307 - Creando los componentes necesarios y rutas
    308 - Menú de la aplicación
    309 - Mostrar un mapa en pantalla completa
    310 - Punto central, zoom y accessToken de forma global